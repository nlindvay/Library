// <auto-generated />
using System;
using Library.Integration.Tests;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Library.Integration.Tests.Migrations
{
    [DbContext(typeof(IntegrationTestDbContext))]
    [Migration("20241014215448_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Library.Components.StateMachines.Book", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("uuid");

                    b.Property<int>("CurrentState")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Isbn")
                        .HasColumnType("text");

                    b.Property<Guid?>("ReservationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("CorrelationId");

                    b.HasIndex("Isbn", "Title")
                        .IsUnique();

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Library.Components.StateMachines.BookReturn", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentState")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("FineRequestId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CorrelationId");

                    b.HasIndex("BookId", "MemberId")
                        .IsUnique();

                    b.ToTable("BookReturn");
                });

            modelBuilder.Entity("Library.Components.StateMachines.CheckOut", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentState")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uuid");

                    b.HasKey("CorrelationId");

                    b.HasIndex("BookId", "MemberId")
                        .IsUnique();

                    b.ToTable("CheckOut");
                });

            modelBuilder.Entity("Library.Components.StateMachines.Reservation", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentState")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ExpirationTokenId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Reserved")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CorrelationId");

                    b.HasIndex("BookId", "MemberId")
                        .IsUnique();

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("Library.Components.StateMachines.ThankYou", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uuid");

                    b.Property<int>("CurrentState")
                        .HasColumnType("integer");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ReservationId")
                        .HasColumnType("uuid");

                    b.Property<int>("ThankYouStatus")
                        .HasColumnType("integer");

                    b.HasKey("CorrelationId");

                    b.HasIndex("BookId", "MemberId")
                        .IsUnique();

                    b.ToTable("ThankYou");
                });
#pragma warning restore 612, 618
        }
    }
}
